name: 部署博客到W3存储
on:
  push:
    branches:
      - main

# 定义工作流阶段
jobs:
  build-and-deploy:
    name: 构建并部署博客
    runs-on: ubuntu-latest
    steps:
      # 检出代码 - 使用内置的检出操作，不依赖外部 actions
      - name: 检出代码
        uses: actions/checkout@v4:https://github.com/actions/checkout
        # with:
        #   fetch-depth: 0 # 获取完整历史以便 git 命令正常工作

      # 构建 Docker 镜像并运行
      - name: 构建并运行 Docker 镜像
        run: |
          echo "构建 Docker 镜像..."
          # 确保 Dockerfile 中已添加 git 和 openssh
          docker build -t vitepress-blog .

          # 创建目录以确保挂载点存在
          mkdir -p /share/CACHEDEV1_DATA/Container/gitea/deploy/blog/dist

          # 清理可能存在的旧容器
          echo "清理可能存在的旧容器..."
          docker rm -f vitepress-builder || true

          # 运行容器并挂载卷
          echo "运行容器并构建博客..."
          docker run --name vitepress-builder \
            -v /share/CACHEDEV1_DATA/Container/gitea/deploy/blog/dist:/app/docs/.vitepress/dist \
            vitepress-blog

          # 检查构建结果
          echo "检查构建结果..."
          ls -la /share/CACHEDEV1_DATA/Container/gitea/deploy/blog/dist || echo "构建目录不存在"

      # 安装 AWS CLI
      - name: 安装AWS CLI
        run: |
          echo "安装AWS CLI..."
          apt-get update && apt-get install -y curl unzip

          # 尝试从国内镜像下载，如果失败则使用官方源
          echo "下载 AWS CLI 安装包..."
          curl "https://mirrors.huaweicloud.com/aws-cli/2.15.0/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" --connect-timeout 10 --retry 2 --retry-delay 2 || \
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" --connect-timeout 30 --retry 3 --retry-delay 2

          # 解压并安装
          echo "解压 AWS CLI 安装包..."
          unzip -q awscliv2.zip
          echo "安装 AWS CLI..."
          ./aws/install

          # 清理安装文件
          rm -rf awscliv2.zip aws

          # 验证安装
          echo "验证 AWS CLI 安装..."
          /usr/local/bin/aws --version || echo "AWS CLI 安装失败，但继续执行"

      # 配置 AWS
      - name: 配置 AWS
        run: |
          echo "配置 AWS 凭证..."
          /usr/local/bin/aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          /usr/local/bin/aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          /usr/local/bin/aws configure set output json
          /usr/local/bin/aws configure set default.s3.addressing_style path
          /usr/local/bin/aws configure set default.s3.payload_signing_enabled true

      # 上传到 S3
      - name: 上传到 W3 存储
        run: |
          echo "上传到 W3 存储..."
          /usr/local/bin/aws s3 cp /share/CACHEDEV1_DATA/Container/gitea/deploy/blog/dist s3://115-web/blog/ \
            --recursive \
            --cache-control "max-age=3600" \
            --endpoint-url http://home.yuanquanke.cn:35246

      # 清理资源
      - name: 清理资源
        if: always() # 无论前面步骤成功或失败，都执行清理
        run: |
          echo "清理资源..."
          docker rm -f vitepress-builder || true
          rm -rf /share/CACHEDEV1_DATA/Container/gitea/deploy/blog/dist

      # 部署完成通知
      - name: 部署完成通知
        if: success() # 仅在成功时显示
        run: |
          echo "✅ 博客已成功部署到 W3 存储！"
          echo "📊 部署时间: $(date)"
          echo "🌐 访问地址: http://home.yuanquanke.cn:35246/115-web/blog/index.html"
